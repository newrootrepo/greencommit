<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%=title %></title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notyf@3.10.0/notyf.min.css">

    <style>
        .input-container {
            position: relative;
            margin-bottom: 30px;
        }
    
        input {
            width: 100%;
            padding: 10px;
            font-size: 16px;
        }
    
        input:focus {
            outline: none;
        }
    
        label {
            position: absolute;
            top: 50%;
            left: 10px;
            font-size: 16px;
            color: #999;
            pointer-events: none;
            transition: 0.2s ease all;
            transform: translateY(-50%);
        }
    
        input:focus+label,
        input:not(:placeholder-shown)+label {
            top: -10px;
            font-size: 12px;
            color: #efefef;
        }
    
        input.error {
            border-color: hsl(0, 100%, 50%);
        }
    
        label.error-message {
            color: rgb(255, 115, 115);
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="inner-container"> 
            <div class="inner-inner-container">
                <div class="input-container">
                    <h1>Sign Up</h1>
                    <form id="signup-form">
                        <div class="error-message" id="global-label"></div>
                        <div class="input-container">
                            <input type="email" id="email" name="email" placeholder="Email">
                            <label for="email">Email</label>
                        </div>
                    
                        <div class="input-container">
                            <input type="password" id="password" name="password" placeholder="Password">
                            <label for="password">Password</label>
                        </div>
                        <button class="btn-signin button-Submit">Submit</button>
                        <div class="text-center text-white p-0 m-0">or</div>
                        <a class="text-center text-white" href="#">Sign up with Google</a>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.getElementById('signin-form');

            form.addEventListener('submit', (event) => {
                event.preventDefault();

                // Select input fields
                const emailInput = document.getElementById('email');
                const passwordInput = document.getElementById('password');

                // Select corresponding labels
                const emailLabel = document.querySelector('label[for="email"]');
                const passwordLabel = document.querySelector('label[for="password"]');

                // Store current values
                let emailValue = emailInput.value.trim();
                let passwordValue = passwordInput.value.trim();

                // Regex patterns
                const emailRegex = /^([a-zA-Z0-9._]+)@([a-zA-Z0-9])+\.([a-z]+)(\.[a-z]+)?$/;
                const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@.#$!%*?&])[A-Za-z\d@.#$!%*?&]{6,15}$/;

                // Validation
                let isValid = true;

                if (!emailValue) {
                    showError(emailInput, emailLabel, 'Email is required');
                    isValid = false;
                } else if (!emailRegex.test(emailValue)) {
                    showError(emailInput, emailLabel, 'Invalid Email');
                    isValid = false;
                } else {
                    clearError(emailInput, emailLabel, 'Email');
                }

                if (!passwordValue) {
                    showError(passwordInput, passwordLabel, 'Password is required');
                    isValid = false;
                } else {
                    clearError(passwordInput, passwordLabel, 'Password');
                }

                return isValid;
            });

            function showError(input, label, message) {
                input.classList.add('error');
                label.textContent = message;  
                label.classList.add('error-message');
            }

  
            function clearError(input, label, defaultMessage) {
                input.classList.remove('error');
                label.textContent = defaultMessage;  
                label.classList.remove('error-message');
            }

            if (isValid) {
                const data = {
                    email,
                    password
                }
                signup(data)
            }
                function signup(email, password) {
                    fetch('/signup', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ data })
                    }).then(res => res.json())
                    .then(res => {
                        if(res.success) {
                            var notyf = new Notyf();
                            notyf.success(res.message, 1000);
                        }else {
                            let errorLabel = document.getElementById('global-label')
                            if(errorLabel) {
                                errorLabel.textContent = res.message
                                errorLabel.textContent = res.message
                            }
                        }
                    }).catch(error => {
                        let errorLabel = document.getElementById('global-label')
                        if(errorLabel) {
                            errorLabel.classList.add('error-message')
                            errorLabel.textContent = error.message
                        }
                    })
                }
                
            })
    </script>
</body>
</html>